{
    // Place your snippets for typescript here. Each snippet is defined under a snippet name and has a prefix, body and 
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
    // same ids are connected.
    // Example:
    // "Print to console": {
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "log console1": {
        "prefix": "iConsole1",
        "body": "console.log(\"$0\");",
    },
    "log console12": {
        "prefix": "iConsole12",
        "body": "console.log(`${$0}`);"
    },
    "log console2": {
        "prefix": "iConsole2",
        "body": "console.log($0);",
    },
    "log console3": {
        "prefix": "iConsole3",
        "body": "console.log(\"---- ${0} ----\");",
    },
    "log console32": {
        "prefix": "iConsole32",
        "body": "console.log(`---- ${${0}} ----`);",
    },
    "log warn1": {
        "prefix": "iWarn1",
        "body": "console.warn(\"$0\");",
    },
    "log warn12": {
        "prefix": "iWarn12",
        "body": "console.warn(`${$0}`);",
    },
    "log warn2": {
        "prefix": "iWarn2",
        "body": "console.warn($0);",
    },
    "log warn3": {
        "prefix": "iWarn3",
        "body": "console.warn(\"---- ${0} ----\");",
    },
    "log warn32": {
        "prefix": "iWarn32",
        "body": "console.warn(`---- ${${0}} ----`);",
    },
    "log error1": {
        "prefix": "iError1",
        "body": "console.error(\"$0\");",
    },
    "log error12": {
        "prefix": "iError12",
        "body": "console.error(`${$0}`);",
    },
    "log error2": {
        "prefix": "iError2",
        "body": "console.error($0);",
    },
    "log error3": {
        "prefix": "iError3",
        "body": "console.error(\"---- ${0} ----\");",
    },
    "log error32": {
        "prefix": "iError32",
        "body": "console.error(`---- ${${0}} ----`);",
    },
    "class": {
        "prefix": "iClass",
        "body": [
            "/**",
            " * $1",
            " * @Author: chenxin",
            " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
            " */",
            "class $TM_FILENAME_BASE {",
            "    ${0}",
            "}"
        ]
    },
    "class implements": {
        "prefix": "iClassImplements",
        "body": [
            "/**",
            " * $1",
            " * @Author: chenxin",
            " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
            " */",
            "class $TM_FILENAME_BASE implements ${0} {",
            "    ",
            "}"
        ]
    },
    "export class implements": {
        "prefix": "iClassImplementsExport",
        "body": [
            "/**",
            " * $1",
            " * @Author: chenxin",
            " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
            " */",
            "export class $TM_FILENAME_BASE implements ${0} {",
            "    ",
            "}"
        ]
    },
    "interface": {
        "prefix": "iInterface",
        "body": [
            "/**",
            " * $1",
            " * @Author: chenxin",
            " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
            " */",
            "interface $TM_FILENAME_BASE {",
            "    ${0}",
            "}"
        ]
    },
    "export interface": {
        "prefix": "iInterfaceExport",
        "body": [
            "/**",
            " * $1",
            " * @Author: chenxin",
            " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
            " */",
            "export interface $TM_FILENAME_BASE {",
            "    ${0}",
            "}"
        ]
    },
    "export default interface": {
        "prefix": "iInterfaceExportDefault",
        "body": [
            "/**",
            " * $1",
            " * @Author: chenxin",
            " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
            " */",
            "export default interface $TM_FILENAME_BASE {",
            "    ${0}",
            "}"
        ]
    },
    "class extends": {
        "prefix": "iClassExtends",
        "body": [
            "/**",
            " * $1",
            " * @Author: chenxin",
            " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
            " */",
            "class $TM_FILENAME_BASE extends ${0} {",
            "    ",
            "}"
        ]
    },
    "export class": {
        "prefix": "iClassExport",
        "body": [
            "/**",
            " * $1",
            " * @Author: chenxin",
            " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
            " */",
            "export class $TM_FILENAME_BASE {",
            "    ${0}",
            "}"
        ]
    },
    "export default class": {
        "prefix": "iClassExportDefault",
        "body": [
            "/**",
            " * $1",
            " * @Author: chenxin",
            " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
            " */",
            "export default class $TM_FILENAME_BASE {",
            "    ${0}",
            "}"
        ]
    },
    "export class extends": {
        "prefix": "iClassExportExtends",
        "body": [
            "/**",
            " * $1",
            " * @Author: chenxin",
            " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
            " */",
            "export class $TM_FILENAME_BASE extends ${0} {",
            "    ",
            "}"
        ]
    },
    "class fgui": {
        "prefix": "iClassFgui",
        "body": [
            "/**",
            " * $1",
            " * @Author: chenxin",
            " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
            " */",
            "export class $TM_FILENAME_BASE extends FUIBase<UI_$TM_FILENAME_BASE> {",
            "    constructor() {",
            "        super();",
            "        this.drawCallOptimize = true;",
            "        ${2:$TM_FILENAME_BASE}Binder.bindAll();",
            "    }",
            "",
            "    onAwake(): void {",
            "        let ui: UI_$TM_FILENAME_BASE = this.ui;",
            "        ui.makeFullScreen();",
            "        ${0}",
            "    }",
            "",
            "    private onClickClose(): void {",
            "        this.close(true, enumWindowAniType.Scale);",
            "    }",
            "}"
        ]
    },
    "export default class extends": {
        "prefix": "iClassExportDefaultExtends",
        "body": [
            "/**",
            " * $1",
            " * @Author: chenxin",
            " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
            " */",
            "export default class $TM_FILENAME_BASE extends ${0} {",
            "    ",
            "}"
        ]
    },
    "class singleton": {
        "prefix": "iSingleton",
        "body": [
            "/**",
            " * $0",
            " * @Author: chenxin",
            " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
            " */",
            "class $TM_FILENAME_BASE {",
            "    private constructor() { }",
            "",
            "    private static _ins: $TM_FILENAME_BASE = null;",
            "",
            "    public static get ins(): $TM_FILENAME_BASE {",
            "        if (!this._ins) this._ins = new $TM_FILENAME_BASE();",
            "        return this._ins;",
            "    }",
            "}"
        ]
    },
    "class singleton2": {
        "prefix": "iSingleton2",
        "body": [
            "private static _ins: ${0} = null;",
            "",
            "public static get ins(): ${0} {",
            "    if (!this._ins) this._ins = new ${0}();",
            "    return this._ins;",
            "}",
        ]
    },
    "export class singleton": {
        "prefix": "iSingletonExport",
        "body": [
            "/**",
            " * $0",
            " * @Author: chenxin",
            " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
            " */",
            "export class $TM_FILENAME_BASE {",
            "    private constructor() { }",
            "",
            "    private static _ins: $TM_FILENAME_BASE = null;",
            "",
            "    public static get ins(): $TM_FILENAME_BASE {",
            "        if (!this._ins) this._ins = new $TM_FILENAME_BASE();",
            "        return this._ins;",
            "    }",
            "}"
        ]
    },
    "export default class singleton": {
        "prefix": "iSingletonExportDefault",
        "body": [
            "/**",
            " * $0",
            " * @Author: chenxin",
            " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
            " */",
            "export default class $TM_FILENAME_BASE {",
            "    private constructor() { }",
            "",
            "    private static _ins: $TM_FILENAME_BASE = null;",
            "",
            "    public static get ins(): $TM_FILENAME_BASE {",
            "        if (!this._ins) this._ins = new $TM_FILENAME_BASE();",
            "        return this._ins;",
            "    }",
            "}"
        ]
    },
    "comment function": {
        "prefix": "iCommentFunction",
        "body": [
            "/** ${0} */",
        ]
    },
    "comment function1": {
        "prefix": "iCommentFunction1",
        "body": [
            "// ${0}",
        ]
    },
    "comment class": {
        "prefix": "iCommentClass",
        "body": [
            "/**",
            " * ${0}",
            " */",
        ]
    },
    "animation": {
        "prefix": "iAnimation",
        "body": "Laya.Animation${0}"
    },
    "HTMLDivElement": {
        "prefix": "iHTMLDivElement",
        "body": "Laya.HTMLDivElement${0}"
    },
    "sprite": {
        "prefix": "iSprite",
        "body": "Laya.Sprite${0}"
    },
    "text": {
        "prefix": "iText",
        "body": "Laya.Text${0}"
    },
    "blurFilterSetter": {
        "prefix": "iBlurFilterSetter",
        "body": "Laya.BlurFilterSetter${0}"
    },
    "colorFilterSetter": {
        "prefix": "iColorFilterSetter",
        "body": "Laya.ColorFilterSetter${0}"
    },
    "glowFilterSetter": {
        "prefix": "iGlowFilterSetter",
        "body": "Laya.GlowFilterSetter${0}"
    },
    "button": {
        "prefix": "iButton",
        "body": "Laya.Button${0}"
    },
    "checkBox": {
        "prefix": "iCheckBox",
        "body": "Laya.CheckBox${0}"
    },
    "clip": {
        "prefix": "iClip",
        "body": "Laya.Clip${0}"
    },
    "colorPicker": {
        "prefix": "iColorPicker",
        "body": "Laya.ColorPicker${0}"
    },
    "comboBox": {
        "prefix": "iComboBox",
        "body": "Laya.ComboBox${0}"
    },
    "hSlider": {
        "prefix": "iHSlider",
        "body": "Laya.HSlider${0}"
    },
    "radioGroup": {
        "prefix": "iRadioGroup",
        "body": "Laya.RadioGroup${0}"
    },
    "tween": {
        "prefix": "iTween",
        "body": "Laya.Tween${0}"
    },
    "tweenClear": {
        "prefix": "iTweenClear",
        "body": "Laya.Tween.clear(${0});"
    },
    "tweenClearAll": {
        "prefix": "iTweenClearAll",
        "body": "Laya.Tween.clearAll(${0});"
    },
    "timer1": {
        "prefix": "iTimer1",
        "body": "Laya.Timer${0}",
    },
    "timerOnce": {
        "prefix": "iTimerOnce",
        "body": "Laya.timer.once(${0});"
    },
    "timerLoop": {
        "prefix": "iTimerLoop",
        "body": "Laya.timer.loop(${0});"
    },
    "timerFrameLoop": {
        "prefix": "iTimerFrameLoop",
        "body": "Laya.timer.frameLoop(${0});"
    },
    "timerFrameOnce": {
        "prefix": "iTimerFrameOnce",
        "body": "Laya.timer.frameOnce(${0});"
    },
    "timerClear": {
        "prefix": "iTimerClear",
        "body": "Laya.timer.clear(this, this.${0});"
    },
    "timerClearAll": {
        "prefix": "iTimerClearAll",
        "body": "Laya.timer.clearAll(this);${0}"
    },
    "new handler": {
        "prefix": "iNewHandler",
        "body": "new Laya.handler(${0})"
    },
    "stageWidth": {
        "prefix": "iStageWidth",
        "body": "Laya.stage.width${0}"
    },
    "stageHeight": {
        "prefix": "iStageHeight",
        "body": "Laya.stage.height${0}"
    },
    "loader": {
        "prefix": "iLoader",
        "body": "Laya.Loader${0}"
    },
    "scene": {
        "prefix": "iScene",
        "body": "Laya.Scene${0}"
    },
    "scene open": {
        "prefix": "iSceneOpen",
        "body": "Laya.Scene.open(${0});"
    },
    "scene close": {
        "prefix": "iSceneClose",
        "body": "Laya.Scene.close(${0});"
    },
    "view": {
        "prefix": "iView",
        "body": "Laya.View${0}"
    },
    "nameEvent": {
        "prefix": "iNameEvent",
        "body": "${1} = \"${1}\",${0}"
    },
    "get private": {
        "prefix": "iGetPrivate",
        "body": [
            "private get ${1}(): ${2} {",
            "    return ${0};",
            "}",
        ]
    },
    "set private": {
        "prefix": "iSetPrivate",
        "body": [
            "private set ${1}(val: ${0}) {",
            "}",
        ]
    },
    "get protected": {
        "prefix": "iGetProtected",
        "body": [
            "protected get ${1}(): ${2} {",
            "    return ${0};",
            "}",
        ]
    },
    "set protected": {
        "prefix": "iSetProtected",
        "body": [
            "protected set ${1}(val: ${0}) {",
            "}",
        ]
    },
    "get public": {
        "prefix": "iGetPublic",
        "body": [
            "public get ${1}(): ${0} {",
            "    return ${3};",
            "}",
        ]
    },
    "set public": {
        "prefix": "iSetPublic",
        "body": [
            "public set ${1}(val: ${0}) {",
            "}",
        ]
    },
    "get set private": {
        "prefix": "iGetSetPrivate",
        "body": [
            "private _${1}: ${0};",
            "",
            "private get ${1}(): ${0} {",
            "    return this._${1};",
            "}",
            "",
            "private set ${1}(value: ${0}) {",
            "    this._${1} = value;",
            "}"
        ]
    },
    "get set protected": {
        "prefix": "iGetSetProtected",
        "body": [
            "private _${1}: ${0};",
            "",
            "protected get ${1}(): ${0} {",
            "    return this._${1};",
            "}",
            "",
            "protected set ${1}(value: ${0}) {",
            "    this._${1} = value;",
            "}"
        ]
    },
    "get set public": {
        "prefix": "iGetSetPublic",
        "body": [
            "private _${1}: ${0};",
            "",
            "public get ${1}(): ${0} {",
            "    return this._${1};",
            "}",
            "",
            "public set ${1}(value: ${0}) {",
            "    this._${1} = value;",
            "}"
        ]
    },
    "function": {
        "prefix": "iFunction",
        "body": [
            "function ${1}() {",
            "    ${0}",
            "}",
        ]
    },
    "function private": {
        "prefix": "iFunctionPrivate",
        "body": [
            "private ${1}($2): ${3:void} {",
            "    ${0}",
            "}",
        ]
    },
    "function static private": {
        "prefix": "iFunctionStaticPrivate",
        "body": [
            "private static ${1}($2): ${3:void} {",
            "    ${0}",
            "}",
        ]
    },
    "function protected": {
        "prefix": "iFunctionProtected",
        "body": [
            "protected ${1}($2): ${3:void} {",
            "    ${0}",
            "}",
        ]
    },
    "function static protected": {
        "prefix": "iFunctionStaticProtected",
        "body": [
            "protected static ${1}($2): ${3:void} {",
            "    ${0}",
            "}",
        ]
    },
    "function public": {
        "prefix": "iFunctionPublic",
        "body": [
            "public ${1}($2): ${3:void} {",
            "    ${0}",
            "}",
        ]
    },
    "function static public": {
        "prefix": "iFunctionStaticPublic",
        "body": [
            "public static ${1}($2): ${3:void} {",
            "    ${0}",
            "}",
        ]
    },
    "function async private": {
        "prefix": "iFunctionAsyncPrivate",
        "body": [
            "private async ${1}($2): Promise<${3:void}> {",
            "    ${0}",
            "}",
        ]
    },
    "function static async private": {
        "prefix": "iFunctionAsyncStaticPrivate",
        "body": [
            "private static async ${1}($2): Promise<${3:void}> {",
            "    ${0}",
            "}",
        ]
    },
    "function async protected": {
        "prefix": "iFunctionAsyncProtected",
        "body": [
            "protected async ${1}($2): Promise<${3:void}> {",
            "    ${0}",
            "}",
        ]
    },
    "function static async protected": {
        "prefix": "iFunctionAsyncStaticProtected",
        "body": [
            "protected static async ${1}($2): Promise<${3:void}> {",
            "    ${0}",
            "}",
        ]
    },
    "function async public": {
        "prefix": "iFunctionAsyncPublic",
        "body": [
            "public async ${1}($2): Promise<${3:void}> {",
            "    ${0}",
            "}",
        ]
    },
    "function static async public": {
        "prefix": "iFunctionAsyncStaticPublic",
        "body": [
            "public static async ${1}($2): Promise<${3:void}> {",
            "    ${0}",
            "}",
        ]
    },
    "constructor": {
        "prefix": "iConstructor",
        "body": [
            "constructor() {",
            "    ${0}",
            "}"
        ]
    },
    "constructor extends": {
        "prefix": "iConstructorExtends",
        "body": [
            "constructor() {",
            "    super();${0}",
            "}"
        ]
    },
    "stage": {
        "prefix": "iStage",
        "body": "Laya.stage${0}"
    },
    "camera": {
        "prefix": "iCamera",
        "body": "Laya.Camera${0}"
    },
    "scene3D": {
        "prefix": "iScene3D",
        "body": "Laya.Scene3D${0}"
    },
    "stage dot": {
        "prefix": "iStageDot",
        "body": "Laya.stage.${0}"
    },
    "timer": {
        "prefix": "iTimer",
        "body": "Laya.timer${0}"
    },
    "tweenTo": {
        "prefix": "iTweenTo",
        "body": "Laya.Tween.to(${0})"
    },
    "tweenFrom": {
        "prefix": "iTweenFrom",
        "body": "Laya.Tween.from(${0})"
    },
    "load": {
        "prefix": "iLoad",
        "body": "Laya.loader.load(${0})"
    },
    "load1": {
        "prefix": "iLoad1",
        "body": "Laya.Loader${0}"
    },
    "browser": {
        "prefix": "iBrowser",
        "body": "Laya.Browser.${0}"
    },
    "browserCW": {
        "prefix": "iBrowserClientWidth",
        "body": "Laya.Browser.clientWidth${0}"
    },
    "browserCH": {
        "prefix": "iBrowserClientHeight",
        "body": "Laya.Browser.clientHeight${0}"
    },
    "event": {
        "prefix": "iEvent",
        "body": "Laya.Event${0}"
    },
    "image": {
        "prefix": "iImage",
        "body": "Laya.Image${0}"
    },
    "label": {
        "prefix": "iLabel",
        "body": "Laya.Label${0}"
    },
    "sprite3D": {
        "prefix": "iSprite3D",
        "body": "Laya.Sprite3D${0}"
    },
    "box": {
        "prefix": "iBox",
        "body": "Laya.Box${0}"
    },
    "dialog": {
        "prefix": "iDialog",
        "body": "Laya.Dialog${0}"
    },
    "fontClip": {
        "prefix": "iFontClip",
        "body": "Laya.FontClip${0}"
    },
    "hBox": {
        "prefix": "iHBox",
        "body": "Laya.HBox${0}"
    },
    "vBox": {
        "prefix": "iVBox",
        "body": "Laya.VBox${0}"
    },
    "hScrollBar": {
        "prefix": "iHScrollBar",
        "body": "Laya.HScrollBar${0}"
    },
    "vScrollBar": {
        "prefix": "iVScrollBar",
        "body": "Laya.VScrollBar${0}"
    },
    "list": {
        "prefix": "iList",
        "body": "Laya.List${0}"
    },
    "panel": {
        "prefix": "iPanel",
        "body": "Laya.Panel${0}"
    },
    "progressBar": {
        "prefix": "iProgressBar",
        "body": "Laya.ProgressBar${0}"
    },
    "radio": {
        "prefix": "iRadio",
        "body": "Laya.Radio${0}"
    },
    "tab": {
        "prefix": "iTab",
        "body": "Laya.Tab${0}"
    },
    "textArea": {
        "prefix": "iTextArea",
        "body": "Laya.TextArea${0}"
    },
    "viewStack": {
        "prefix": "iViewStack",
        "body": "Laya.ViewStack${0}"
    },
    "textInput": {
        "prefix": "iTextInput",
        "body": "Laya.TextInput${0}"
    },
    "tree": {
        "prefix": "iTree",
        "body": "Laya.Tree${0}"
    },
    "layaInit": {
        "prefix": "iInit",
        "body": "Laya.init(${0});"
    },
    "webGL": {
        "prefix": "iWebGL",
        "body": "Laya.WebGL${0}"
    },
    "handler": {
        "prefix": "iHandler",
        "body": "Laya.Handler${0}"
    },
    "handler create": {
        "prefix": "iHandlerCreate",
        "body": "Laya.Handler.create(this, ${0})"
    },
    "private static": {
        "prefix": "iPrivateStatic",
        "body": "private static ${0}"
    },
    "protected static": {
        "prefix": "iProtectedStatic",
        "body": "protected static ${0}"
    },
    "public static": {
        "prefix": "iPublicStatic",
        "body": "public static ${0}"
    },
    "Stage": {
        "prefix": "iStage1",
        "body": "Laya.Stage${0}"
    },
    "ease": {
        "prefix": "iEase",
        "body": "Laya.Ease.${0}"
    },
    "point": {
        "prefix": "iPoint",
        "body": "Laya.Point"
    },
    "rectangle": {
        "prefix": "iRectangle",
        "body": "Laya.Rectangle"
    },
    "enum": {
        "prefix": "iEnum",
        "body": [
            "/**",
            " * ${1}",
            " */",
            "const enum ${2} {",
            "    ${0}",
            "}"
        ]
    },
    "enum export": {
        "prefix": "iEnumExport",
        "body": [
            "/**",
            " * ${1}",
            " */",
            "export const enum ${2} {",
            "    ${0}",
            "}"
        ]
    },
    "enum export1": {
        "prefix": "iEnumExport1",
        "body": [
            "/** ${1} */",
            "export const enum ${2} {",
            "    ${0}",
            "}"
        ]
    },
    "node": {
        "prefix": "iNode",
        "body": "Laya.Node${0}"
    },
    "pool": {
        "prefix": "iPool",
        "body": "Laya.Pool${0}"
    },
    "vector2": {
        "prefix": "iVector2",
        "body": "Laya.Vector2${0}"
    },
    "vector3": {
        "prefix": "iVector3",
        "body": "Laya.Vector3${0}"
    },
    "vector4": {
        "prefix": "iVector4",
        "body": "Laya.Vector4${0}"
    },
    "cameraClearFlags": {
        "prefix": "iCameraClearFlags",
        "body": "Laya.CameraClearFlags${0}"
    },
    "baseCamera": {
        "prefix": "iBaseCamera",
        "body": "Laya.BaseCamera{0}"
    },
    "directional light": {
        "prefix": "iDirectionLight",
        "body": "Laya.DirectionLight${0}"
    },
    "shadowMode": {
        "prefix": "iShadowMode",
        "body": "Laya.ShadowMode${0}"
    },
    "code": {
        "prefix": "iCode",
        "body": [
            "/**",
            " * $0",
            " * @Author: chenxin",
            " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
            " */",
        ]
    },
    "table": {
        "prefix": "iTable",
        "body": [
            "import { Dictionary } from \"../utils/Dictionary\";",
            "import { tbl } from \"./tblMax\";",
            "",
            "/**",
            " * ${1}",
            " * @Author: chenxin",
            " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
            " */",
            "export class $TM_FILENAME_BASE extends tbl.${0} {",
            "    public static DIC: Dictionary;",
            "",
            "    public init(obj: Array<any>, dic: Dictionary): void {",
            "        super.init(obj);",
            "        dic.set(this.id, this);",
            "        $TM_FILENAME_BASE.DIC = dic;",
            "    }",
            "",
            "    public static getCfg(id: number): $TM_FILENAME_BASE {",
            "        if (!$TM_FILENAME_BASE.DIC) return null;",
            "        return $TM_FILENAME_BASE.DIC.get(id);",
            "    }",
            "}"
        ]
    },
    "cx test": {
        "prefix": "iCxTest",
        "body": [
            "/** cx test */${0}"
        ]
    },
    "cx todo": {
        "prefix": "iCxTodo",
        "body": [
            "/** cx todo */${0}"
        ]
    },
    "script": {
        "prefix": "iScript",
        "body": [
            "Laya.Script${0}"
        ]
    },
    "keyboard": {
        "prefix": "iKeyboard",
        "body": "Laya.Keyboard${0}"
    },
    "skeleton": {
        "prefix": "iLayaSkeleton",
        "body": "Laya.Skeleton${0}"
    },
    "templete": {
        "prefix": "iTemplet",
        "body": "Laya.Templet${0}"
    },
    "boneSlot": {
        "prefix": "iBoneSlot",
        "body": "Laya.BoneSlot${0}"
    },
    "for1": {
        "prefix": "iFor1",
        "body": [
            "for (let ${1}: number = 0, len = ${2}.length; ${1} < len; ++${1}) {",
            "    ${0}",
            "}"
        ]
    },
    "forIn": {
        "prefix": "iForIn",
        "body": [
            "for (let ${1} in ${2}) {",
            "    ${0}",
            "}"
        ]
    },
    "for2": {
        "prefix": "iFor2",
        "body": [
            "for (let ${1}: number = 0; ${1} < ${2}.length; ++${1}) {",
            "    ${0}",
            "}"
        ]
    },
    "dic": {
        "prefix": "iDic",
        "body": "{ [${1}: ${2}]: ${0} }"
    },
    "itemRender": {
        "prefix": "iItemRender",
        "body": "${1:list}.itemRenderer = Laya.Handler.create(this, this.${0:renderItem}, null, false);"
    },
    "itemProvider": {
        "prefix": "iItemProvider",
        "body": "${1:list}.itemProvider = Laya.Handler.create(this, this.${0:itemProvider}, null, false);"
    },
    "renderItem": {
        "prefix": "iRenderItem",
        "body": [
            "private ${1:renderItem}(index: number, item: ${2:fgui.GObject}): void {",
            "    ${0}",
            "}"
        ]
    },
    "provierItem": {
        "prefix": "iProviderItem",
        "body": [
            "private ${1:itemProvider}(index: number): string {",
            "    ${0}",
            "}"
        ]
    },
    "EEvent": {
        "prefix": "iEEvent",
        "body": "E.ins.event(EventName.${0});"
    },
    "EOn": {
        "prefix": "iEOn",
        "body": "E.ins.on(EventName${0}, this, this.${1});"
    },
    "EOnce": {
        "prefix": "iEOnce",
        "body": "E.ins.once(EventName${0}, this, this.${1});"
    },
    "EOff": {
        "prefix": "iEOff",
        "body": "E.ins.off(EventName${0}, this, this.${1});"
    },
    "socketOn": {
        "prefix": "iSocketOn",
        "body": "GameSocketManager.ins.on(EventName${0}, this, this.${1});"
    },
    "socketOnce": {
        "prefix": "iSocketOnce",
        "body": "GameSocketManager.ins.once(EventName${0}, this, this.${1});"
    },
    "socketOff": {
        "prefix": "iSocketOff",
        "body": "GameSocketManager.ins.off(EventName${0}, this, this.${1});"
    },
    "setPropitem": {
        "prefix": "iSetPropitem",
        "body": [
            "let param = { key: ${1} };",
            "let gener = ItemUtils.getItemData(param).gener;",
            "${2:item}.setData(0, gener.getCfgId(param), \"\", \"\", gener.getIcon(param), gener.getQuality(param));"
        ]
    },
    "onClick": {
        "prefix": "iOnClick",
        "body": "${1}.onClick(this, this.${0});"
    },
    "fuiClass": {
        "prefix": "iFguiClass",
        "body": [
            "/**",
            " * $1",
            " * @Author: chenxin",
            " * @Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
            " */",
            "export class $TM_FILENAME_BASE extends FUIBase<UI_$TM_FILENAME_BASE> {",
            "    constructor() {",
            "        super();",
            "        this.drawCallOptimize = true;",
            "        ${2:$TM_FILENAME_BASE}Binder.bindAll();",
            "    }",
            "",
            "    onAwake(): void {",
            "        let ui: UI_$TM_FILENAME_BASE = this.ui;",
            "        ui.makeFullScreen();",
            "        ${0}",
            "    }",
            "}"
        ]
    }
}